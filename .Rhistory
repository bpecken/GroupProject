rm(list=ls())
getwd()
setwd("C:/Users/dusti/GitHub/QB2019_Brewer/2.Worksheets/5.AlphaDiversity")
install.packages("vegan")
require("vegan")
data(BCI)
str(BCI)
S.obs <- function(x = ""){
rowSums(x > 0) * 1
}
BCI <- BCI
BCI
site1 <- (BCI[1,])
site1
S.obs(site1)
specnumber(BCI[1,])
specnumber(BCI[4,])
C <- function(x = ""){
1 - (rowSums(x == 1) / rowSums(x))
}
C(BCI[,])
soilbac <- read.table("data/soilbac.txt", sep = "\t", header = TRUE, row.names = 1)
soilbac
soilbac.t <- as.data.frame(t(soilbac))
soilbac.t
soilbac1 <- soilbac.t[1,]
S.obs(soilbac1)
C(soilbac1)
Chao1 <- function(x = ""){
S.obs(x) + (sum(x == 1)^2) / (2*sum(x ==2))
}
Chao2 <- function(site = "", SbyS = ""){
SbyS = as.data.frame(SbyS)
x = SbyS[site, ]
SbyS.pa <- (SbyS > 0) * 1
Q1 = sum(colSums(SbyS.pa) == 1)
Q2 = sum(colSums(SbyS.pa) == 2)
Chao2 = S.obs(x) + (Q1^2) / (2*Q2)
return(Chao2)
}
ACE <- function(x = "", thresh = 10){
x <- x[x>0]
S.abund <- length(which(x > thresh))
S.rare <- length(which(x <= thresh))
singlt <- length(which(x == 1))
N.rare <- sum(x[which(x <= thresh)])
C.ace <- 1 - (singlt / N.rare)
i <- c(1:thresh)
count <- function(i, y){
length(y[y == i])
}
a.1 <- sapply(i, count, x)
f.1 <- (i * (i - 1)) * a.1
G.ace <- (S.rare/C.ace)*(sum(f.1)/(N.rare*(N.rare-1)))
S.ace <- S.abund + (S.rare/C.ace) + (singlt/C.ace) * max(G.ace,0)
return(S.ace)
}
Chao1(site1)
Chao1(soilbac1)
ACE(site1)
ACE(soilbac1)
Chao2(1, BCI)
Chao2(1, soilbac.t)
soilbac.S <- S.obs(soilbac.t)
soilbac.S
min.N <- min(rowSums(soilbac.t))
min.N
S.rarefy <- rarefy(x = soilbac.t, sample = min.N, se = TRUE)
rarecurve(x = soilbac.t, step = 20, col = "blue", cex = 0.6, las = 1)
abline(0, 1, col = 'red')
text(1500, 1500, "1:1", pos = 2, col = 'red')
RAC <- function(x = ""){
x = as.vector(x)
x.ab = x[x > 0]
x.ab.ranked = x.ab[order(x.ab, decreasing = TRUE)]
return(x.ab.ranked)
}
plot.new()
rac <- RAC(x = site1)
ranks <- as.vector(seq(1, length(rac)))
opar <- par(no.readonly = TRUE)
par(mar = c(5.1, 5.1, 4.1, 2.1))
plot(ranks, log(rac), type = 'p', axes = F,
xlab = "Rank in abundance", ylab = "Abundance",
las = 1, cex.lab = 1.4, cex.axis = 1.25)
box()
axis(side = 1, labels = T, cex.axis = 1.25)
axis(side = 2, las = 1, cex.axis = 1.225,
labels = c(1, 2, 5, 10, 20), at = log(c(1,2,5,10,20)))
SimpE <- function(x = ""){
S <- S.obs(x)
x = as.data.frame(x)
D <- diversity(x, "inv")
E <- (D)/S
return(E)
}
SimpE(site1)
Evar <- function(x){
x <- as.vector(x[x > 0])
1 - (2/pi)*atan(var(log(x)))
}
Evar(site1)
ShanH <- function(x = ""){
H = 0
for (n_i in x) {
if(n_i > 0) {
p = n_i / sum(x)
H = H - p*log(p)
}
}
return(H)
}
ShanH(site1)
diversity(site1, index = "shannon")
SimpD <- function(x = "") {
D = 0
N = sum(x)
for (n_i in x){
D = D + (n_i^2)/(N^2)
}
return(D)
}
D.inv <- 1/SimpD(site1)
D.sub <- 1-SimpD(site1)
D.inv
D.sub
diversity(site1, "inv")
diversity(site1, "simp")
rac <- as.vector(site1[site1 > 0])
invD <- diversity(rac, "inv")
invD
Fisher <- fisher.alpha(rac)
Fisher
RACresults <- radfit(site1)
RACresults
plot.new()
plot(RACresults, las = 1, cex.lab = 1.4, cex.axis = 1.25)
install.packages("vegan")
install.packages("vegan")
install.packages("vegan")
require("vegan")
setwd("C:/Users/dusti/GitHub/QB2019_Brewer/2.Worksheets/5.AlphaDiversity")
install.packages("vegan", repos = "http://cran.us.r-project.org")
require("vegan")
install.packages("vegan", repos = "http://cran.us.r-project.org")
BCI
BCI <- data(BCI)
data(BCI)
library("vegan", lib.loc="~/R/win-library/3.4")
data(BCI)
BCI
install.packages("vegan", repos = "http://cran.us.r-project.org")
require("vegan")
install.packages("vegan", repos = "http://cran.us.r-project.org")
data(BCI)
data(BCI)
install.packages("vegan", repos = "http://cran.us.r-project.org")
require("vegan")
data(BCI)
str(BCI)
BCI
BCI
BCI <- data(BCI)
install.packages("vegan", repos = "http://cran.us.r-project.org")
install.packages("vegan", repos = "http://cran.us.r-project.org")
BCI <- data(BCI)
require("vegan")
BCI <- data(BCI)
BCI
data(BCI)
rm(list=ls())
getwd()
setwd("C:/Users/dusti/GitHub/QB2019_Brewer/2.Worksheets/5.AlphaDiversity")
install.packages("vegan", repos = "http://cran.us.r-project.org")
require("vegan")
install.packages("vegan", repos = "http://cran.us.r-project.org")
data(BCI)
data(BCI)
setwd("C:/Users/dusti/GitHub/QB2019_Brewer/2.Worksheets/5.AlphaDiversity")
install.packages("vegan", repos = "http://cran.us.r-project.org")
library("vegan")
data(BCI)
BCI
str(BCI)
View(soilbac1)
setwd("C:/Users/dusti/Box Sync/Personal Computer/Quantitative Biodiversity/Group Project/GroupProject")
rm(list=ls())
library(vegan)
library(psych)
library(ggplot2)
Guilds <- read.csv("ForagingGuildsDataFile.csv")
str(Guilds)
summary(Guilds)
sem <- function(x){
sd(na.omit(x))/sqrt(length(na.omit(x)))
}
#Compute means for omnivores and insectivores in the different mortality classes
Omnivores.Mean <- tapply(Guilds$Omn_16, Guilds$mortality.class, mean)
Insectivores.Mean <- tapply(Guilds$Ins_29, Guilds$mortality.class, mean)
#Compute standard errors for those means
Omnivores.SE <- tapply(Guilds$Omn_16, Guilds$mortality.class, sem)
Insectivores.SE <- tapply(Guilds$Ins_29, Guilds$mortality.class, sem)
OmnivorePlot <- barplot(Omnivores.Mean, ylim = c(0, round(max(Omnivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean, y1 = Omnivores.Mean - Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean , y1 = Omnivores.Mean + Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
OmnivorePlot <- barplot(Omnivores.Mean, ylim = c(0, round(1.5*max(Omnivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean, y1 = Omnivores.Mean - Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean , y1 = Omnivores.Mean + Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
#Insectivore bar plot
InsectivorePlot <- barplot(Insectivores.Mean, ylim = c(0, round(1.5*max(Insectivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = InsectivorePlot, y0 = Insectivores.Mean, y1 = Insectivores.Mean - Insectivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = InsectivorePlot, y0 = Insectivores.Mean , y1 = Insectivores.Mean + Insectivores.SE, angle = 90,
length = 0.1, lwd = 1)
# Make data frame with mortality class and mean abundances for omnivores
mortality <- c("low", "medium", "high A", "high B")
dfomn <- cbind(mortality, Omnivores.Mean)
dfomn <- as.data.frame(dfomn)
dfomn
rm(dfomn)
rm(mortality)
OmnivoreAnova <- aov(Guilds$Omn_16~Guilds$mortality.class, data = Guilds)
OmnivoreAnova
summary(OmnivoreAnova)
TukeyHSD(OmnivoreAnova)
InsectivoreAnova <- aov(Guilds$Ins_29~Guilds$mortality.class, data = Guilds)
summary(InsectivoreAnova)
setwd("C:/Users/dusti/Box Sync/Personal Computer/Quantitative Biodiversity/Group Project/GroupProject")
rm(list=ls())
library(vegan)
library(psych)
library(ggplot2)
Guilds <- read.csv("ForagingGuildsDataFile.csv")
str(Guilds)
summary(Guilds)
sem <- function(x){
sd(na.omit(x))/sqrt(length(na.omit(x)))
}
#Compute means for omnivores and insectivores in the different mortality classes
Omnivores.Mean <- tapply(Guilds$Omn_16, Guilds$mortality.class, mean)
Insectivores.Mean <- tapply(Guilds$Ins_29, Guilds$mortality.class, mean)
#Compute standard errors for those means
Omnivores.SE <- tapply(Guilds$Omn_16, Guilds$mortality.class, sem)
Insectivores.SE <- tapply(Guilds$Ins_29, Guilds$mortality.class, sem)
#Omnivore bar plot
OmnivorePlot <- barplot(Omnivores.Mean, ylim = c(0, round(1.5*max(Omnivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean, y1 = Omnivores.Mean - Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean , y1 = Omnivores.Mean + Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
#Insectivore bar plot
InsectivorePlot <- barplot(Insectivores.Mean, ylim = c(0, round(1.5*max(Insectivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = InsectivorePlot, y0 = Insectivores.Mean, y1 = Insectivores.Mean - Insectivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = InsectivorePlot, y0 = Insectivores.Mean , y1 = Insectivores.Mean + Insectivores.SE, angle = 90,
length = 0.1, lwd = 1)
#Try to get the omnivore and insectivore bars on same plot
#Run Omnivore Anova
OmnivoreAnova <- aov(Guilds$Omn_16~Guilds$mortality.class, data = Guilds)
OmnivoreAnova
summary(OmnivoreAnova)
TukeyHSD(OmnivoreAnova)
#Run Insectivore ANOVA
InsectivoreAnova <- aov(Guilds$Ins_29~Guilds$mortality.class, data = Guilds)
summary(InsectivoreAnova)
TukeyHSD(OmnivoreAnova)
ClusteredBar <- read.csv("GuildsClusteredBar.csv")
ClusteredBar
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ClusteredBar
ggplot(ClusteredBar, aes(x=as.factor(Mortality), y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=mean+S.E.), width = .2, position = position_dodge(.9))
str(ClusteredBar)
ClusteredBar
ggplot(ClusteredBar, aes(x=as.factor(Mortality), y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9))
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9))
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle(Bird Abundance)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
TukeyHSD(InsectivoreAnova)
summary(OmnivoreAnova)
TukeyHSD(OmnivoreAnova)
Guilds
Omnivores.Mean <- tapply(Guilds$Omn_16, Guilds$mortality.class, mean)
Omnivores.Mean
Insectivores.Mean
Omnivores.SE
Insectivores.SE
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
setwd("C:/Users/dusti/Box Sync/Personal Computer/Quantitative Biodiversity/Group Project/GroupProject")
rm(list=ls())
library(vegan)
library(psych)
library(ggplot2)
Guilds <- read.csv("ForagingGuildsDataFile.csv")
str(Guilds)
summary(Guilds)
sem <- function(x){
sd(na.omit(x))/sqrt(length(na.omit(x)))
}
Omnivores.Mean <- tapply(Guilds$Omn_16, Guilds$mortality.class, mean)
Omnivores.Mean
Insectivores.Mean <- tapply(Guilds$Ins_29, Guilds$mortality.class, mean)
Insectivores.Mean
#Compute standard errors for those means
Omnivores.SE <- tapply(Guilds$Omn_16, Guilds$mortality.class, sem)
Omnivores.SE
Insectivores.SE <- tapply(Guilds$Ins_29, Guilds$mortality.class, sem)
Insectivores.SE
#Omnivore bar plot
OmnivorePlot <- barplot(Omnivores.Mean, ylim = c(0, round(1.5*max(Omnivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean, y1 = Omnivores.Mean - Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = OmnivorePlot, y0 = Omnivores.Mean , y1 = Omnivores.Mean + Omnivores.SE, angle = 90,
length = 0.1, lwd = 1)
#Insectivore bar plot
InsectivorePlot <- barplot(Insectivores.Mean, ylim = c(0, round(1.5*max(Insectivores.Mean), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "mean site abundance",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = InsectivorePlot, y0 = Insectivores.Mean, y1 = Insectivores.Mean - Insectivores.SE, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = InsectivorePlot, y0 = Insectivores.Mean , y1 = Insectivores.Mean + Insectivores.SE, angle = 90,
length = 0.1, lwd = 1)
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ClusteredBar
str(ClusteredBar)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
OmnivoreAnova <- aov(Guilds$Omn_16~Guilds$mortality.class, data = Guilds)
OmnivoreAnova
summary(OmnivoreAnova)
TukeyHSD(OmnivoreAnova)
ClusteredBar <- factor(ClusteredBar$Mortality, levels = c("Low", "Med", "Hi-A", "Hi-B"))
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance") + scale_x_discrete(limits = Low, Medium, High-A, High-B)
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
str(ClusteredBar)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance") + scale_x_discrete(limits = Low, Medium, High-A, High-B)
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ClusteredBar
str(ClusteredBar)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance") + scale_x_discrete(limits = Low, Medium, High A, High B)
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ClusteredBar
str(ClusteredBar)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance") + scale_x_discrete(limits = c(Low, Medium, High-A, High-B))
?scale_x_discrete
mortality.class <- factor(ClusteredBar$Mortality, levels = c("Low", "Med", "Hi-A", "Hi-B"))
ClusteredBar <- tapply(ClusteredBar, mortality.class)
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ClusteredBar
str(ClusteredBar)
ggplot(ClusteredBar, aes(x=reorder(Mortality, value), y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance") + scale_x_discrete(limits = c(Low, Medium, High-A, High-B))
ggplot(ClusteredBar, aes(x=reorder(Mortality, value), y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
install.packages("forcats")
library(forcats)
ClusteredBar$Mortality <- fct_relevel(Mortality, "Low", "Medium", "High-A", "High-B")
str(ClusteredBar)
ClusteredBar$Mortality <- fct_relevel("Low", "Medium", "High-A", "High-B")
library(dplyr)
ClusteredBar %>%
mutate(Mortality = fct_relevel(Mortality, "Low", "Medium", "High-A", "High-B")) %>%
ggplot(ClusteredBar, aes(x=reorder(Mortality), y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
str(ClusteredBar)
ClusteredBar <- read.csv("GuildsClusteredBar.csv", header = TRUE)
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
str(data.means)
ClusteredBar$Mortality <- fct_relevel(ClusteredBar$Martality, "Low", "Medium", "High-A", "High-B")
ClusteredBar$Mortality <- fct_relevel(ClusteredBar$Mortality, "Low", "Medium", "High-A", "High-B")
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
ClusteredBar$Mortality <- fct_relevel(ClusteredBar$Mortality, "Low", "Medium", "High-B", "High-A")
ggplot(ClusteredBar, aes(x=Mortality, y = Mean, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Bird Abundance")
library(corrplot)
data.without.guilds <- read.csv("hf085-01-bird.csv", header = TRUE)
data.num <- data.without.guilds[ ,3:51]
S.obs <- function(x = ""){
rowSums(x > 0) * 1
}
S.chao2 <- function(site = "", SbyS = ""){
SbyS = as.data.frame(SbyS)
x = SbyS[site, ]
SbyS.pa <- (SbyS > 0) * 1
Q1 = sum(colSums(SbyS.pa) == 1)
Q2 = sum(colSums(SbyS.pa) == 2)
S.chao2 = S.obs(x) + (Q1^2)/(2*Q2)
return(S.chao2)
}
obs.rich <- S.obs(data.num)
obs.rich
est.rich <- S.chao2(1:40, data.num)
est.rich
data.rich <- cbind(data, est.rich)
data.rich
m1 <- lm(est.rich ~ mortality.class, data = data.rich)
data.rich <- cbind(data.without.guilds, est.rich)
data.rich
m1 <- lm(est.rich ~ mortality.class, data.without.guilds = data.rich)
m1 <- lm(est.rich ~ mortality.class, data.without.guilds = data.rich)
m1 <- lm(est.rich ~ mortality.class, data = data.rich)
summary(m1)
mortality <- factor(data.rich$mortality.class, levels = c("Low", "Med", "Hi-A", "Hi-B"))
mortality
data.means <- tapply(data.rich$est.rich, mortality, mean)
data.sem <- tapply(data.rich$est.rich, mortality, sem)
bp1 <- barplot(data.means, ylim = c(0, round(max(data.rich$est.rich), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "mortality class",
ylab = "estimated richness",
names.arg = c("low", "medium", "high A", "high B"))
arrows(x0 = bp1, y0 = data.means, y1 = data.means - data.sem, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = bp1, y0 = data.means, y1 = data.means + data.sem, angle = 90,
length = 0.1, lwd = 1)
bp1 <- barplot(data.means, ylim = c(0, round(max(data.rich$est.rich), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "Mortality class",
ylab = "Estimated richness",
names.arg = c("low", "medium", "high A", "high B"), main = "Estimated Richness")
arrows(x0 = bp1, y0 = data.means, y1 = data.means - data.sem, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = bp1, y0 = data.means, y1 = data.means + data.sem, angle = 90,
length = 0.1, lwd = 1)
bp1 <- barplot(data.means, ylim = c(0, round(max(data.rich$est.rich), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "Mortality class",
ylab = "# Species",
names.arg = c("low", "medium", "high A", "high B"), main = "Estimated Richness")
arrows(x0 = bp1, y0 = data.means, y1 = data.means - data.sem, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = bp1, y0 = data.means, y1 = data.means + data.sem, angle = 90,
length = 0.1, lwd = 1)
bp1 <- barplot(data.means, ylim = c(0, round(max(data.rich$est.rich), digits = 0)),
pch = 15, cex = 1.25, las = 1, cex.lab = 1.4, cex.axis = 1.25,
xlab = "Mortality class",
ylab = "# Species",
names.arg = c("Low", "Medium", "High-A", "High-B"), main = "Estimated Richness")
arrows(x0 = bp1, y0 = data.means, y1 = data.means - data.sem, angle = 90,
length = 0.1, lwd = 1)
arrows(x0 = bp1, y0 = data.means, y1 = data.means + data.sem, angle = 90,
length = 0.1, lwd = 1)
Spec.Rich.GUilds <- read.csv("GuildsClusteredRich.csv")
Spec.Rich.Guilds$Mortality <- fct_relevel(Spec.Rich.Guilds$Mortality, "Low", "Medium", "High-B", "High-A")
Spec.Rich.GUilds <- read.csv("GuildsClusteredRich.csv")
Spec.Rich.Guilds <- read.csv("GuildsClusteredRich.csv")
Spec.Rich.Guilds$Mortality <- fct_relevel(Spec.Rich.Guilds$Mortality, "Low", "Medium", "High-B", "High-A")
ggplot(Spec.Rich.Guilds, aes(x=Mortality, y = Richness, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Mean-S.E., ymax=Mean+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Species Richness")
ggplot(Spec.Rich.Guilds, aes(x=Mortality, y = Richness, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Richness-S.E., ymax=Richness+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Species Richness")
ggplot(Spec.Rich.Guilds, aes(x=Mortality, y = Richness, fill = Guild)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Richness-S.E., ymax=Richness+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Observed Species Richness")
sem <- function(x){
sd(na.omit(x))/sqrt(length(na.omit(x)))
}
MeanAbundMort <- read.csv("MortalityMeanAbund.csv")
MeanAbundMort$Mortality <- fct_relevel(MeanAbundMort$Mortality, "Low", "Medium", "High-B", "High-A")
ggplot(MeanAbundMort, aes(x=Mortality, y = Abundance)) +
geom_bar(position=position_dodge(), stat ="identity", colour = 'black') + geom_errorbar(aes(ymin=Abundance-S.E., ymax=Abundance+S.E.), width = .2, position = position_dodge(.9)) + ggtitle("Mean Abundance")
fitanova <- aov(est.rich ~ mortality, data = data.rich)
fitanova
summary(fitanova)
TukeyHSD(fitanova)
par(mfrow = c(2,2), mar = c(5.1, 4.1, 4.1, 2.1))
plot(fitanova)
